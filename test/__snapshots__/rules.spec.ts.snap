// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tslint standard plus should match current snapshot 1`] = `
Array [
  Object {
    "failure": "if statements must be braced",
    "fileName": "test/mocks/curly.ts",
    "id": 0,
    "ruleName": "curly",
  },
  Object {
    "failure": "Expected error to be handled",
    "fileName": "test/mocks/handle-callback-err.ts",
    "id": 1,
    "ruleName": "handle-callback-err",
  },
  Object {
    "failure": "missing whitespace",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 2,
    "ruleName": "whitespace",
  },
  Object {
    "failure": "missing whitespace",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 3,
    "ruleName": "whitespace",
  },
  Object {
    "failure": "missing whitespace",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 4,
    "ruleName": "whitespace",
  },
  Object {
    "failure": "missing whitespace",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 5,
    "ruleName": "whitespace",
  },
  Object {
    "failure": "missing whitespace",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 6,
    "ruleName": "whitespace",
  },
  Object {
    "failure": "A space is required after '{'",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 7,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "A space is required before '}'",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 8,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "A space is required after '{'",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 9,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "A space is required before '}'",
    "fileName": "test/mocks/import-spacing.ts",
    "id": 10,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "Type declaration of 'any' loses type-safety. Consider replacing it with a more precise type.",
    "fileName": "test/mocks/no-any.ts",
    "id": 11,
    "ruleName": "no-any",
  },
  Object {
    "failure": "Type declaration of 'any' loses type-safety. Consider replacing it with a more precise type.",
    "fileName": "test/mocks/no-any.ts",
    "id": 12,
    "ruleName": "no-any",
  },
  Object {
    "failure": "Type declaration of 'any' loses type-safety. Consider replacing it with a more precise type.",
    "fileName": "test/mocks/no-any.ts",
    "id": 13,
    "ruleName": "no-any",
  },
  Object {
    "failure": "Type declaration of 'any' loses type-safety. Consider replacing it with a more precise type.",
    "fileName": "test/mocks/no-any.ts",
    "id": 14,
    "ruleName": "no-any",
  },
  Object {
    "failure": "unexpected constant condition",
    "fileName": "test/mocks/no-constant-condition.ts",
    "id": 15,
    "ruleName": "no-constant-condition",
  },
  Object {
    "failure": "block is empty",
    "fileName": "test/mocks/no-inner-declarations.ts",
    "id": 16,
    "ruleName": "no-empty",
  },
  Object {
    "failure": "Type number trivially inferred from a number literal, remove type annotation",
    "fileName": "test/mocks/no-inner-declarations.ts",
    "id": 17,
    "ruleName": "no-inferrable-types",
  },
  Object {
    "failure": "move function declaration to program root",
    "fileName": "test/mocks/no-inner-declarations.ts",
    "id": 18,
    "ruleName": "no-inner-declarations",
  },
  Object {
    "failure": "Multiple spaces found before 'true'.",
    "fileName": "test/mocks/no-multi-spaces.ts",
    "id": 19,
    "ruleName": "no-multi-spaces",
  },
  Object {
    "failure": "A space is required after '{'",
    "fileName": "test/mocks/object-destruct-spacing.ts",
    "id": 20,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "A space is required before '}'",
    "fileName": "test/mocks/object-destruct-spacing.ts",
    "id": 21,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "A space is required after '{'",
    "fileName": "test/mocks/object-destruct-spacing.ts",
    "id": 22,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "A space is required before '}'",
    "fileName": "test/mocks/object-destruct-spacing.ts",
    "id": 23,
    "ruleName": "object-curly-spacing",
  },
  Object {
    "failure": "Named imports must be alphabetized.",
    "fileName": "test/mocks/ordered-imports.ts",
    "id": 24,
    "ruleName": "ordered-imports",
  },
  Object {
    "failure": "Missing whitespace before function parens",
    "fileName": "test/mocks/prefer-readonly.ts",
    "id": 25,
    "ruleName": "space-before-function-paren",
  },
  Object {
    "failure": "Private member variable 'a' is never reassigned; mark it as 'readonly'.",
    "fileName": "test/mocks/prefer-readonly.ts",
    "id": 26,
    "ruleName": "prefer-readonly",
  },
  Object {
    "failure": "Unnecessary semicolon",
    "fileName": "test/mocks/semicolon.ts",
    "id": 27,
    "ruleName": "semicolon",
  },
  Object {
    "failure": "Whitespace within parentheses is not allowed",
    "fileName": "test/mocks/space-within-parens.ts",
    "id": 28,
    "ruleName": "space-within-parens",
  },
  Object {
    "failure": "Whitespace within parentheses is not allowed",
    "fileName": "test/mocks/space-within-parens.ts",
    "id": 29,
    "ruleName": "space-within-parens",
  },
  Object {
    "failure": "Multiple spaces found before '=>'.",
    "fileName": "test/mocks/ter-arrow-spacing.ts",
    "id": 30,
    "ruleName": "no-multi-spaces",
  },
  Object {
    "failure": "Expected indentation of 2 spaces but found 3.",
    "fileName": "test/mocks/ter-indent.ts",
    "id": 31,
    "ruleName": "ter-indent",
  },
  Object {
    "failure": "Unnecessary trailing comma",
    "fileName": "test/mocks/trailing-comma.ts",
    "id": 32,
    "ruleName": "trailing-comma",
  },
]
`;
